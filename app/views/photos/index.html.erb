<div class="container dropdown-container">
  <div class="dropdown">
    <button class="dropbtn">Filter by layout <i class="arrow down"></i></button>
    <div class="dropdown-content">
      <p id="portrait" class="btn-desactivated">Portrait</p>
      <p id="landscape" class="btn-desactivated">Landscape</p>
    </div>
  </div>

  <div class="dropdown">
    <%= link_to "Upload your own ðŸ“Ž", new_photo_path, class: "dropbtn" %>
  </div>

  <div class="dropdown">
    <%#= @max_page %>
  </div>

</div>

<div class="grid-photos">
  <% @photos.each do |photo| %>

    <div class="photo-container" >
      <img class="photoindex" data-id = "<%= photo['id'] %>" src="<%= photo["src"]["large2x"]%>" data-height = "<%= photo['height'] %>" data-width = "<%= photo['width'] %>" height="300" alt="test">
      <% if user_signed_in? && current_user.has_favorite_photo?(photo["id"]) %>
      <div class="icon-container">
        <a id="destroy-<%=current_user.favorite_id(photo["id"])%>" href="/favorites/<%=current_user.favorite_id(photo["id"])%>"  data-apiId="<%= photo["id"]%>" data-method="delete" data-remote="true" style="visibility:hidden"></a>
        <i class="fas fa-heart icon-clicked" data-id = "<%= photo['id'] %>" data-src="<%= photo["src"]["large2x"]%>"></i>
      </div>
      <% elsif  user_signed_in?  %>
      <div class="icon-container">
        <i class="fas fa-heart" data-id = "<%= photo['id'] %>" data-src="<%= photo["src"]["large2x"]%>"></i>
      </div>
    <% end %>

    </div>
  <% end %>

</div>

<div class="more-photos text-center mt-4 mb-4">
  <a id="upload-button"class="btn btn-primary w-25" href="/upload_index/<%= @next_query %>" data-remote="true">Search More</a>
</div>

<!-- &max_page=<%#=@max_page %> -->

  <%= simple_form_for Photo.new do |f| %>
    <%= f.input :api_id, :as => :hidden %>
    <%= f.input :api_url, :as => :hidden %>
    <%= f.input :height, :as => :hidden %>
    <%= f.input :width, :as => :hidden %>
  <% end %>


<%= simple_form_for Favorite.new, remote: true do |f| %>
  <input  id="favorite_api_id" type="text" value="" hidden="true" name="api_id">
  <input type="text" id="favorite_api_url" value="" hidden="true" name="url_id">
<% end %>

<!-- <p>
  Photo ID:<%#= photo["id"] %>
  Width:<%#= photo["width"] %>
  Height:<%#= photo["height"] %>
  HD:<%#= photo["src"]["original"] %>
  Large:<%#= photo["src"]["large2x"] %>
  Medium:<%#= photo["src"]["medium"] %>
</p> -->

<script> // FILTER PORTRAIT & LANDSCAPE
  let photos = document.querySelectorAll(".photoindex")
  let portrait = document.querySelector("#portrait")
  let landscape = document.querySelector("#landscape")

  portrait.addEventListener('click', (e) => {
    portrait.classList.toggle("btn-activated");
    photos.forEach((photo) => {
      if (photo.dataset.height < photo.dataset.width * 1.5) {
        photo.parentElement.classList.toggle("display");
      }
    })
  })

  landscape.addEventListener('click', (e) => {
    landscape.classList.toggle("btn-activated");
    photos.forEach((photo) => {
      if (photo.dataset.height * 1.5 > photo.dataset.width) {
        photo.parentElement.classList.toggle("display");
      }
    })
  })

// WHEN USER CLICKS ON A PHOTO, CREATE A NEW PHOTO
  let form_id = document.querySelector("#photo_api_id")
  let form_url = document.querySelector("#photo_api_url")
  let form_height = document.querySelector("#photo_height")
  let form_width = document.querySelector("#photo_width")


  photos.forEach((photo) => {

    photo.addEventListener('click', (e) => {
      form_id.value = photo.dataset.id
      form_url.value = photo.src
      form_height.value = photo.dataset.height
      form_width.value = photo.dataset.width
      document.querySelector("#new_photo").submit()
    })
  })


// WHEN USER CLICKS ON A HEART, ADD IT TO THE FAVORITES
  let favoritesForm = document.querySelector("#new_favorite")
  let hearts = document.querySelectorAll(".fa-heart")
  let apiUrl = document.querySelector("#favorite_api_url")
  let apiId = document.querySelector("#favorite_api_id")
  let addIds = JSON.parse(localStorage.getItem("addIds")) || [];
  let removeIds = JSON.parse(localStorage.getItem("removeIds")) || [];

  hearts.forEach((heart)=>{
    heart.addEventListener('click', (e) => {
      apiId.value = e.target.dataset.id
      apiUrl.value = e.target.dataset.src
      if (e.target.classList.contains("icon-clicked")) {
        addIds = addIds.filter(function(item) { return item !== e.target.dataset.id })
        removeIds.push(e.target.dataset.id)
        localStorage.setItem("removeIds", JSON.stringify(removeIds));
        localStorage.setItem("addIds", JSON.stringify(addIds));
        document.querySelector(`a[data-apiid='${e.target.dataset.id}']`).click()
        e.target.classList.remove("icon-clicked")
      } else {
        removeIds = removeIds.filter(function(item) { return item !== e.target.dataset.id })
        addIds.push(e.target.dataset.id)
        localStorage.setItem("removeIds", JSON.stringify(removeIds));
        localStorage.setItem("addIds", JSON.stringify(addIds));
        Rails.fire(favoritesForm, "submit")
      }
    })
  })

</script>

<script>
</script>



