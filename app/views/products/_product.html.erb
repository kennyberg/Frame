<div class="large-bloc">
  <h3 class="mb-4">UPDATE YOUR COMPOSITION</h3>
  <div class="colum-left">
    <div id="left-left">
      <h2 class="mb-2">Change the options</h2>
        <p class="mb-3">
          Customize your frame by chosing the type of frame you like, and the size of the composition. </br>
          Tips & tricks : if you want to place one frame only, then choose a large format, then you will give more perspective to your room. If you prefer small frames, then you would think about placing several frames together. This will giev a uniq design to your home.
        </p>
    </div>
    <div id="left-right">
      <div class="dropdowns-select">
        <%= simple_form_for(@product) do |f| %>
          <div class="dropdown mb-4">
            <select name="frame[dimension]" id="dimension" class="dropbtn">
              <option value="<%= @product.frame_combo.frame_dimension.id %>"><%= @product.frame_combo.frame_dimension.format %></option>
              <% @frame_dimension.each do |dimension| %>
                <option class="dropdown-content btn-desactivated" value="<%= dimension.id %>"><%= dimension.format %></option>
              <% end %>
            </select>
          </div>
          <!-- below, we display all the frame_material existing in a dropdown menu by using the select element. The value that we assign (i.e. material.id) is the value that we'll be able the retrieve when the user chooses a particular option. We add an id to the select element so that we can document.querySelector("#id_name") with js.-->
          <div class="dropdown">
            <select name="frame[material]" id="material" class="dropbtn">
              <option value="<%= @product.frame_combo.frame_material.id %>"><%= @product.frame_combo.frame_material.name %></option>
              <% @frame_materials.each do |material| %>
                <option class="dropdown-content btn-desactivated" value="<%= material.id %>"><%= material.name %></option>
              <% end %>
            </select>
          </div>
          <!-- below, we transform the @prices created in the photos controller into a json object. We then store it into a data-* attribute which is used to store custom data private to the page or application. The data-* attribute gives us the ability to embed custom data attributes in a HTML element.-->
        </div>
        <div>
          <h2 id="priceBox"><strong>â‚¬ <%= @product.price %></strong></h2>
        </div>
    </div>
  </div>

  <div id="bottom-buttons">
      <%= link_to "Back", photos_path, class: "btn-gray" %>
    <div style="display: none" id="prices", data-prices="<%= @prices.to_json %>"></div>
      <%= f.button :submit, "Update", class: "btn-blue", id:"add" %>
      <% end %>
  </div>
</div>

<script>
  const button = document.querySelector("#add");
  const material = document.querySelector("#material");
  const dimension = document.querySelector("#dimension");

  button.disabled = true;

  if (material.value === "" || dimension.value === "" ) {
    button.disabled = true;
  }
  else {
    button.disabled = false;
  }
</script>
